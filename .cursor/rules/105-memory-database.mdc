---
description: Database implementation for persistent storage of memory system data
globs: **/*
alwaysApply: true
---

# Memory Database System

The Cursor10x Memory System uses Turso Database for persistent storage of all memory data across sessions.

## Database Health Monitoring

The AI **SHOULD** verify database health when:
- Memory tools fail to function
- Context appears inconsistent
- User reports missing information

```
mcp_cursor10x_checkHealth({})

mcp_cursor10x_getMemoryStats({})
```

## Database Schema

The database schema includes tables for:

- **Short-Term Memory**
  - `messages`: Recent conversation messages
  - `context`: General context information
  - `variables`: Temporary key-value storage
  - `active_files`: Recently accessed files

- **Long-Term Memory**
  - `milestones`: Important project events
  - `requirements`: User requirements
  - `decisions`: Important project decisions
  - `configurations`: System configuration

- **Episodic Memory**
  - `episodes`: Chronological events and interactions

## Memory Persistence Rules

The AI **MUST** consider data persistence with appropriate tools:

```
mcp_cursor10x_storeUserMessage({
  content: "critical project requirement", 
  importance: "high"
})

mcp_cursor10x_storeMilestone({
  title: "Database Implementation", 
  description: "Implemented Turso database", 
  importance: "high"
})

mcp_cursor10x_storeDecision({
  title: "Database Technology", 
  content: "Using Turso for storage", 
  reasoning: "Better performance", 
  importance: "high"
})
```

## Data Retrieval Rules

The AI **SHOULD** retrieve and use database information when:
- Starting a new session
- Context is unclear
- Making recommendations

```
mcp_cursor10x_getComprehensiveContext({})
mcp_cursor10x_getRecentMessages({limit: 5})
mcp_cursor10x_getActiveFiles({limit: 3})
```

## Error Handling

If database errors occur, the AI **SHOULD**:

1. Check system health
2. Report the error to the user
3. Continue functionality without persistent storage

```javascript
// âœ… DO: Handle potential errors
try {
  mcp_cursor10x_storeUserMessage({message: "Important message", importance: "medium"});
} catch (error) {
  // Continue functionality, inform user of potential memory issues
}
```
